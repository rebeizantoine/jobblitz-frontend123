import React, { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import "../Styles/employerpp.css";
import editimage from "../Images/edit123.png";
import handsalary from "../Images/hand-salary.png";
import topimage from "../Images/face.png";
import axios from "axios";

const Employerpp = () => {
  const { usernameEmployer } = useParams();
  const [employerData, setEmployerData] = useState(null);

  const [highestBoxEditMode, setHighestBoxEditMode] = useState(false);
  const [highestBoxEditedData, setHighestBoxEditedData] = useState({
    locationEmployer: "",
    educationEmployer: "",
    experienceEmployer: "",
    companyRecruitingFor: "",
  });

  const [otherBoxesEditMode, setOtherBoxesEditMode] = useState(false);
  const [otherBoxesEditedData, setOtherBoxesEditedData] = useState({
    companyName: "",
    companyType: "",
    companyCountry: "",
    companyPhone: "",
    companyProfile: "",
    companyNumberofemployees: "",
    companyWebsite: "",
  });

  useEffect(() => {
    const fetchEmployerData = async () => {
      try {
        const response = await axios.get(
          `http://localhost:8000/employer/employers/username/${usernameEmployer}`
        );
        setEmployerData(response.data.data);
      } catch (error) {
        console.error("Error fetching employer data:", error);
      }
    };
    fetchEmployerData();
  }, [usernameEmployer]);

  const handleHighestBoxEditSave = async () => {
    try {
      await axios.put(
        `http://localhost:8000/employer/employers/update/${employerData._id}`,
        highestBoxEditedData,
        {
          headers: {
            "Content-Type": "application/json",
          },
        }
      );

      const response = await axios.get(
        `http://localhost:8000/employer/employers/username/${usernameEmployer}`
      );
      setEmployerData(response.data.data);
      setHighestBoxEditMode(false);
    } catch (error) {
      console.error("Error updating employer data:", error);
    }
  };

  const handleOtherBoxesEditSave = async () => {
    try {
      await axios.put(
        `http://localhost:8000/employer/employers/update/${employerData._id}`,
        otherBoxesEditedData,
        {
          headers: {
            "Content-Type": "application/json",
          },
        }
      );

      const response = await axios.get(
        `http://localhost:8000/employer/employers/username/${usernameEmployer}`
      );
      setEmployerData(response.data.data);
      setOtherBoxesEditMode(false);
    } catch (error) {
      console.error("Error updating employer data:", error);
    }
  };

  if (!employerData) {
    return <div>Loading...</div>;
  }

  return (
    <div className="all-boxes-jobseek">
      <div className="highest-box-1">
        <div className="image-highest">
          <img src={topimage} alt="" />
        </div>
        <div className="profilething">
          <h2>{`${employerData.firstnameEmployer} ${employerData.lastnameEmployer}`}</h2>
          <div className="info-box">
            <div className="info-item1">
              <div className="pergunta">
                <strong>Location:</strong>
              </div>
              <div className="answer12">
                {highestBoxEditMode ? (
                  <input
                    type="text"
                    value={highestBoxEditedData.locationEmployer}
                    onChange={(e) =>
                      setHighestBoxEditedData({
                        ...highestBoxEditedData,
                        locationEmployer: e.target.value,
                      })
                    }
                  />
                ) : (
                  employerData.locationEmployer
                )}
              </div>
              {highestBoxEditMode && (
                <button onClick={() => setHighestBoxEditMode(false)}>
                  Cancel
                </button>
              )}
            </div>

            <div className="info-item1">
              <div className="pergunta">
                <strong>Education:</strong>
              </div>
              <div className="answer12">
                {highestBoxEditMode ? (
                  <input
                    type="text"
                    value={highestBoxEditedData.educationEmployer}
                    onChange={(e) =>
                      setHighestBoxEditedData({
                        ...highestBoxEditedData,
                        educationEmployer: e.target.value,
                      })
                    }
                  />
                ) : (
                  employerData.educationEmployer
                )}
              </div>
              {highestBoxEditMode && (
                <button onClick={() => setHighestBoxEditMode(false)}>
                  Cancel
                </button>
              )}
            </div>

            <div className="info-item1">
              <div className="pergunta">
                <strong>Experience:</strong>
              </div>
              <div className="answer12">
                {highestBoxEditMode ? (
                  <input
                    type="text"
                    value={highestBoxEditedData.experienceEmployer}
                    onChange={(e) =>
                      setHighestBoxEditedData({
                        ...highestBoxEditedData,
                        experienceEmployer: e.target.value,
                      })
                    }
                  />
                ) : (
                  employerData.experienceEmployer
                )}
              </div>
              {highestBoxEditMode && (
                <button onClick={() => setHighestBoxEditMode(false)}>
                  Cancel
                </button>
              )}
            </div>

            <div className="info-item1">
              <div className="pergunta-special">
                <strong>Company recruiting for:</strong>
              </div>
              <div className="answer12">
                {highestBoxEditMode ? (
                  <input
                    type="text"
                    value={highestBoxEditedData.companyRecruitingFor}
                    onChange={(e) =>
                      setHighestBoxEditedData({
                        ...highestBoxEditedData,
                        companyRecruitingFor: e.target.value,
                      })
                    }
                  />
                ) : (
                  employerData.companyRecruitingFor
                )}
              </div>
              {highestBoxEditMode && (
                <button onClick={() => setHighestBoxEditMode(false)}>
                  Cancel
                </button>
              )}
            </div>
          </div>
          {!highestBoxEditMode ? (
            <button onClick={() => setHighestBoxEditMode(true)}>Edit</button>
          ) : (
            <div>
              <button onClick={() => handleHighestBoxEditSave()}>Save</button>
              <button onClick={() => setHighestBoxEditMode(false)}>
                Cancel
              </button>
            </div>
          )}
        </div>
      </div>

      <div className="second-box">
        <h2>Employer Information</h2>
        <div className="info-box-1">
          <div className="info-item1-1">
            <div className="pergunta-1">
              <strong>Name:</strong>
            </div>
            <div className="answer-1">{`${employerData.firstnameEmployer} ${employerData.lastnameEmployer}`}</div>
          </div>

          <div className="info-item1-1">
            <div className="pergunta-1">
              <strong>Birth Date:</strong>
            </div>
            <div className="answer-1">22-03-2000</div>
          </div>

          <div className="info-item1-1">
            <div className="pergunta-1">
              <strong>Gender:</strong>
            </div>
            <div className="answer-1">{employerData.genderEmployer}</div>
          </div>

          <div className="info-item1-1">
            <div className="pergunta-1">
              <strong>Nationality:</strong>
            </div>
            <div className="answer-1">{employerData.nationalityEmployer}</div>
          </div>

          <div className="info-item1-1">
            <div className="pergunta-1">
              <strong>Residence Country:</strong>
            </div>
            <div className="answer-1">Lebanon</div>
          </div>

          <div className="info-item1-1">
            <div className="pergunta-1">
              <strong>Email:</strong>
            </div>
            <div className="answer-1">{employerData.emailEmployer}</div>
          </div>
        </div>
      </div>

      <div className="beforeside">
        <h2>Company Information</h2>
        {otherBoxesEditMode ? (
          <div>
            <div className="info-box-1">
              <label>
                Company Name:
                <input
                  type="text"
                  value={otherBoxesEditedData.companyName}
                  onChange={(e) =>
                    setOtherBoxesEditedData({
                      ...otherBoxesEditedData,
                      companyName: e.target.value,
                    })
                  }
                />
              </label>
            </div>

            <div className="info-box-1">
              <label>
                Company Type:
                <input
                  type="text"
                  value={otherBoxesEditedData.companyType}
                  onChange={(e) =>
                    setOtherBoxesEditedData({
                      ...otherBoxesEditedData,
                      companyType: e.target.value,
                    })
                  }
                />
              </label>
            </div>

            <div className="info-box-1">
              <label>
                Company Country:
                <input
                  type="text"
                  value={otherBoxesEditedData.companyCountry}
                  onChange={(e) =>
                    setOtherBoxesEditedData({
                      ...otherBoxesEditedData,
                      companyCountry: e.target.value,
                    })
                  }
                />
              </label>
            </div>

            <div className="info-box-1">
              <label>
                Company Phone:
                <input
                  type="text"
                  value={otherBoxesEditedData.companyPhone}
                  onChange={(e) =>
                    setOtherBoxesEditedData({
                      ...otherBoxesEditedData,
                      companyPhone: e.target.value,
                    })
                  }
                />
              </label>
            </div>

            <div className="info-box-1">
              <label>
                Company Profile:
                <textarea
                  value={otherBoxesEditedData.companyProfile}
                  onChange={(e) =>
                    setOtherBoxesEditedData({
                      ...otherBoxesEditedData,
                      companyProfile: e.target.value,
                    })
                  }
                />
              </label>
            </div>

            <div className="info-box-1">
              <label>
                Number of Employees:
                <input
                  type="text"
                  value={otherBoxesEditedData.companyNumberofemployees}
                  onChange={(e) =>
                    setOtherBoxesEditedData({
                      ...otherBoxesEditedData,
                      companyNumberofemployees: e.target.value,
                    })
                  }
                />
              </label>
            </div>

            <div className="info-box-1">
              <label>
                Company Website:
                <input
                  type="text"
                  value={otherBoxesEditedData.companyWebsite}
                  onChange={(e) =>
                    setOtherBoxesEditedData({
                      ...otherBoxesEditedData,
                      companyWebsite: e.target.value,
                    })
                  }
                />
              </label>
            </div>

            <button onClick={() => handleOtherBoxesEditSave()}>Save</button>
            <button onClick={() => setOtherBoxesEditMode(false)}>Cancel</button>
          </div>
        ) : (
          <div className="info-box-1">
            <img
              onClick={() => setOtherBoxesEditMode(true)}
              src={editimage}
              alt=""
            />
          </div>
        )}
      </div>

      <div className="sidebyside">
        <div className="third-box1">
          <h2>Contact Information</h2>
          <p>
            This is the only way for job seekers to reach out to you. Make sure
            you add your contact details correctly.
          </p>
          <div className="info-item1-1">
            <div className="pergunta-1">
              <strong>Email address</strong>
            </div>
            <div className="answer-1">{employerData.emailEmployer}</div>
          </div>
          <div className="info-item1-1">
            <div className="pergunta-1">
              <strong>Mobile number:</strong>
            </div>
            <div className="answer-1">{employerData.phoneEmployer}</div>
          </div>
        </div>

        <div className="fourth-box1">
          <h2>Upload Company Logo</h2>
          <div className="flex-logo">
            <div>
              <p>Attach Your Company Logo here</p>
              <button>Attach Logo</button>
            </div>
            <img src={topimage} alt="" />
          </div>
        </div>
      </div>

      <div className="last-box">
        <div className="inside-last-box">
          <h2>Company job applications</h2>
          <h3>IT Help Desk Support</h3>
          <div className="flex-1">
            <h4>ONIX IT SOLUTIONS &nbsp;&nbsp;&nbsp;&nbsp;. </h4>
            <div className="job-location">
              <h5>Jounieh,Lebanon </h5>
            </div>
          </div>
          <p className="description-small">
            We are seeking a highly motivated and customer-oriented IT Help Desk
            Support Specialist to join our IT
          </p>
          <div className="flex-2">
            <img src={handsalary} alt="" />
            <p className="money">$1,000 - $1,500</p>
            <p className="datenow">6 days ago</p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Employerpp;
